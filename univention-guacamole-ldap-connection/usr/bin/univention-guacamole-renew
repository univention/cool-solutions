#!/bin/bash
# Copyright (C) 2017-2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

eval "$(ucr shell)"

echo -e "Checking if UCR variables for LDAP configuration are set..."
if [ "${guacamole_user_dn}" ]; then
    echo -e "LDAP_USER_BASE_DN can be set"
else
    echo -e "LDAP_USER_BASE_DN cannot be set, check UCR variable 'guacamole/user/dn'!"
    exit 1
fi
if [ "${guacamole_config_base_dn}" ]; then
    echo -e "LDAP_CONFIG_BASE_DN can be set"
else
    echo -e "LDAP_CONFIG_BASE_DN cannot be set, check UCR variable 'guacamole/config/base/dn'!"
    exit 1
fi
if [ "${guacamole_ldap_username_attribute}" ]; then
    echo -e "LDAP_USERNAME_ATTRIBUTE can be set"
else
    echo -e "LDAP_USERNAME_ATTRIBUTE cannot be set, check UCR variable 'guacamole/ldap/username/attribute'!"
    exit 1
fi
if [ "${guacamole_ldap_member_attribute}" ]; then
    echo -e "LDAP_MEMBER_ATTRIBUTE can be set"
else
    echo -e "LDAP_MEMBER_ATTRIBUTE cannot be set, check UCR variable 'guacamole/ldap/member/attribute'!"
    exit 1
fi
if [ "${guacamole_external_port}" ]; then
    echo -e "External port can be set"
else
    echo -e "External port cannot be set, check UCR variable 'guacamole/external/port'!"
    exit 1
fi
if [ "${guacamole_ldap_user_searchfilter}" ]; then
    echo -e "LDAP_USER_SEARCH_FILTER can be set"
else
    echo -e "LDAP_USER_SEARCH_FILTER cannot be set, check UCR variables 'guacamole/ldap/user/searchfilter'!"
    exit 1
fi
if [ "${guacamole_ldap_group_base_dn}" ]; then
	echo -e "LDAP_GROUP_BASE_DN can be set"
else
	echo -e "LDAP_GROUP_BASE_DN cannot be set, check UCR variables 'guacamole/ldap/group-base-dn'!"
	exit 1
fi
if [ "${guacamole_ldap_group_name_attribute}" ]; then
	echo -e "LDAP_GROUP_NAME_ATTRIBUTE can be set"
else
	echo -e "LDAP_GROUP_NAME_ATTRIBUTE cannot be set, check variables 'guacamole/ldap/group-name-attribute'!"
	exit 1
fi
if [ "${guacamole_ldap_group_searchfilter}" ]; then
	echo -e "LDAP_GROUP_SEARCH_FILTER can be set"
else
	echo -e "LDAP_GROUP_SEARCH_FILTER cannot be set, check variables 'guacamole/ldap/group-searchfilter'!"
	exit 1
fi
if [ "${guacamole_ldap_member_attribute_type}" ]; then
	echo -e "LDAP_MEMBER_ATTRIBUTE_TYPE can be set"
else
	echo -e "LDAP_MEMBER_ATTRIBUTE_TYPE cannot be set, check variables 'guacamole/ldap/member/attribute-type'!"
	exit 1
fi
if [ -e /etc/guacamole.secret ]; then
    echo "Search user can be used"
else
    echo -e "Cannot find password file for guacamole search user, verify that /etc/guacamole.secret exists!"
    exit 1
fi

echo -e ""
echo -e "Creating new container for Guacamole"
echo -e "---------------"

if [ $(/usr/bin/docker ps -q -f name=guacd) ]; then
    echo -n "Stopping and removing old Guacd container... "
    /usr/bin/docker stop guacd > /dev/null
    /usr/bin/docker rm guacd > /dev/null
    echo -e "Done!"
fi

echo -n "Creating new Guacd container... "
/usr/bin/docker run \
    --name guacd \
    --restart=always \
    -d guacamole/guacd:1.3.0 > /dev/null
echo -e "Done!"


if [ $(/usr/bin/docker ps -q -f name=guacamole) ]; then
    if [ "0.0.0.0:${guacamole_external_port}" != "$(/usr/bin/docker port guacamole 8080)" ]; then
        echo -n "External port changed. Reloading apache2 server... "
        systemctl reload apache2.service

        # apache2 failed to reload successfully. Warn the User
        if [ $? != 0 ]; then
            echo "ERROR: apache2 failed to reload. Check your log files for further help."
            exit 1
        fi
        echo -e "Done!"
    fi

    echo -n "Stopping and removing old Guacamole container... "
    /usr/bin/docker stop guacamole > /dev/null
    /usr/bin/docker rm guacamole > /dev/null
    echo -e "Done!"
fi

echo -n "Creating new Guacamole container... "
/usr/bin/docker run \
    --name guacamole \
    --link guacd:guacd \
    --restart=always \
    -e LDAP_HOSTNAME="${ldap_server_name}" \
    -e LDAP_PORT="${ldap_server_port}" \
    -e LDAP_USER_BASE_DN="${guacamole_user_dn}" \
    -e LDAP_GROUP_BASE_DN="${guacamole_ldap_group_base_dn}" \
    -e LDAP_CONFIG_BASE_DN="${guacamole_config_base_dn}" \
    -e LDAP_USERNAME_ATTRIBUTE="${guacamole_ldap_username_attribute}" \
    -e LDAP_GROUP_NAME_ATTRIBUTE="${guacamole_ldap_group_name_attribute}" \
    -e LDAP_MEMBER_ATTRIBUTE="${guacamole_ldap_member_attribute}" \
    -e LDAP_MEMBER_ATTRIBUTE_TYPE="${guacamole_ldap_member_attribute_type}" \
    -e LDAP_SEARCH_BIND_DN="uid=guacamole-${hostname},cn=users,${ldap_base}" \
    -e LDAP_SEARCH_BIND_PASSWORD="$(cat /etc/guacamole.secret)" \
    -e LDAP_USER_SEARCH_FILTER="${guacamole_ldap_user_searchfilter}" \
    -e LDAP_GROUP_SEARCH_FILTER="${guacamole_ldap_group_searchfilter}" \
    -d -p "${guacamole_external_port}":8080 guacamole/guacamole:1.3.0 > /dev/null
/usr/bin/docker cp /usr/share/guacamole/guacamole-auth-ldap-* guacamole:/opt/guacamole/ldap/
/usr/bin/docker cp /usr/share/guacamole/start.sh guacamole:/opt/guacamole/bin
/usr/bin/docker restart guacamole > /dev/null
echo -e "Done!"

exit 0
